version: '3.4'

services:
  server0:
    image: server
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 5236:5236
    environment:
      - ASPNETCORE_URLS=http://+:5236
    depends_on: 
      - rabbitmq
      - redis
      - posgres
    restart: always

  server1:
    image: server
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 5237:5237
    environment:
      - ASPNETCORE_URLS=http://+:5237
    depends_on: 
      - rabbitmq
      - redis
      - posgres
    restart: always

  server2:
    image: server
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 5238:5238
    environment:
      - ASPNETCORE_URLS=http://+:5237
    depends_on: 
      - rabbitmq
      - redis
      - posgres
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    ports:
    - "5672:5672"
    - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    restart: always 

  redis:
    image: redis
    restart: always
    ports:
      - '6379:6379'

  posgres:
    image: postgres
    ports:
      - "5432"
    volumes:
      - ./pg_data:/var/lib/posgresql/data/pgdata
      - ./scripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_USER: "guest"
      POSTGRES_PASSWORD: "guest"
      POSTGRES_DB: "Chat"
      PGDATA: /var/lib/postgresql/data
    restart: always 